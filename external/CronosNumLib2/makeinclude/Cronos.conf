#!/bin/bash

with_cronos=true

# get makeinclude dir
my_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

aux_rootdir=${my_dir%/src*}
basedir=${my_dir%/src*}
src_rootdir=${my_dir%/makeinclude*}

# check for parameters
for i do
    case "$i" in
	--without-cronos ) with_cronos=false;;
	--prefix* ) aux_rootdir="${i#*=}";;
	help )
	    echo " Script to configure Cronos "
	    echo " Options: "
	    echo " --without-cronos -> only configure libraries "
	    echo " --prefix         -> set dir for storing libs and includes "
	    exit
	    ;;
    esac
done


echo " use cronos: $with_cronos "
echo " root dir for libraries: $aux_rootdir "
echo " local dir: $my_dir "


util_dir="$src_rootdir/util"
util_makefile="$util_dir/makefile"
util_Makefile="$util_dir/Makefile"

Matrix_dir="$src_rootdir/Matrix"
Matrix_makefile="$Matrix_dir/makefile"
Matrix_Makefile="$Matrix_dir/Makefile"

User_dir="$src_rootdir/cronos/User"
User_makefile="$User_dir/makefile"
User_Makefile="$User_dir/Makefile"


makefile_string="include $my_dir/first.mak"
Makefile_string="include $my_dir/include.mak"






# util dir:
echo " Treating $util_dir "

# write to makefile (with backup)
if [ ! -d "$util_makefile.back" ]; then
    cp $util_makefile "$util_makefile.back"
fi
echo "$makefile_string" > $util_makefile
chmod u+x $util_makefile

# write to Makefile (with backup)
if [ ! -d "$util_Makefile.back" ]; then
    cp $util_Makefile "$util_Makefile.back"
fi

buff="$util_Makefile.dump"
sed "1 c $Makefile_string" <$util_Makefile >$buff
mv $buff $util_Makefile
chmod u+x $util_Makefile



# Matrix dir:
echo " Treating $Matrix_dir "

# write to makefile (with backup)
if [ ! -d "$Matrix_makefile.back" ]; then
    cp $Matrix_makefile "$Matrix_makefile.back"
fi
echo "$makefile_string" > $Matrix_makefile
chmod u+x $Matrix_makefile

# write to Makefile (with backup)
if [ ! -d "$Matrix_Makefile.back" ]; then
    cp $Matrix_Makefile "$Matrix_Makefile.back"
fi

buff="$Matrix_Makefile.dump"
sed "1 c $Makefile_string" <$Matrix_Makefile >$buff
mv $buff $Matrix_Makefile
chmod u+x $Matrix_Makefile


# Cronos code dir:

User_dir="$src_rootdir/cronos/User"
User_makefile="$User_dir/makefile"
User_Makefile="$User_dir/Makefile"

echo " Treating $User_dir"

if [ "$with_cronos" = "true" ]; then

    if [ ! -d "$User_makefile.back" ]; then
	cp $User_makefile "$User_makefile.back"
    fi
    echo "$makefile_string" > $User_makefile
    chmod u+x $User_makefile

    # write to Makefile (with backup)
    if [ ! -d "$User_Makefile.back" ]; then
	cp $User_Makefile "$User_Makefile.back"
    fi

    buff="$User_Makefile.dump"
    sed "1 c $Makefile_string" <$User_Makefile >$buff
    mv $buff $User_Makefile
    chmod u+x $User_Makefile

fi




# makeinclude dir

makeinclude_dir="$src_rootdir/makeinclude"
first_mak="$makeinclude_dir/first.mak"
include_mak="$makeinclude_dir/include.mak"

echo " Treating $makeinclude_dir "

ostype_string="include $my_dir/ostype.mak"
ostype_string2="include $my_dir/\$(X_OSTYPE)"
x_root_dir_string="X_ROOT_DIR	= $aux_rootdir"

# treat first.mak
if [ ! -d "$first_mak.back" ]; then
    cp $first_mak "$first_mak.back"
fi

buff="$first_mak.dump"
sed "1 c $ostype_string" <$first_mak >$buff
mv $buff $first_mak
chmod u+x $first_mak


#treat include.mak
if [ ! -d "$include_mak.back" ]; then
    cp $include_mak "$include_mak.back"
fi

buff="$include_mak.dump"
#sed "s:$(HOME):$basedir:" <$include_mak >$buff
sed -e "1 c $ostype_string" -e "2 c $ostype_string2" \
    -e "6 c $x_root_dir_string" <$include_mak >$buff
mv $buff $include_mak
chmod u+x $include_mak

echo " Finished "

